from Ammomaly.utils.logger import log

STATES = {}

# Adds a new state which will be tracked in the update_loop
def init_tracking(statename, function_generate, function_compare, action_on_diff):
    global STATES
    STATES[statename] = {
        "current_state": function_generate(), 
        "generator_func": function_generate,
        "compare_func": function_compare,
        "action_func": action_on_diff
    }

# Update each of the known states
def update_states():
    global STATES
    for s in STATES:
        # Generate 'new' data
        new_data = STATES[s]['generator_func']()
        # Compare new data vs current data
        diff = STATES[s]['compare_func'](STATES[s]['current_state'], new_data)
        # If there is A diff, start the action function
        # The check conditions currently only looks into rows generated by new_data 
        # which are not in the current_data.
        if len(diff) > 0:
            log.info(f"Starting action function for state {s}")
            STATES[s]['action_func'](diff)
        else:
            log.info(f"No changes for state {s}") 
        # Store new data as current data
        STATES[s]['current_state'] = new_data
